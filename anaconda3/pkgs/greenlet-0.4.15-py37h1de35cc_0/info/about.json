{
  "channels": [
    "defaults",
    "https://repo.anaconda.com/pkgs/free"
  ],
  "conda_build_version": "3.14.4",
  "conda_private": false,
  "conda_version": "4.5.11",
  "description": "The greenlet package is a spin-off of Stackless, a version of CPython that\nsupports micro-threads called \"tasklets\". Tasklets run pseudo-concurrently\n(typically in a single or a few OS-level threads) and are synchronized with\ndata exchanges on \"channels\".\n\nA \"greenlet\", on the other hand, is a still more primitive notion of\nmicro-thread with no implicit scheduling; coroutines, in other words. This\nis useful when you want to control exactly when your code runs. You can\nbuild custom scheduled micro-threads on top of greenlet; however, it seems\nthat greenlets are useful on their own as a way to make advanced control\nflow structures. For example, we can recreate generators; the difference\nwith Python's own generators is that our generators can call nested\nfunctions and the nested functions can yield values too. Additionally,\nyou don't need a \"yield\" keyword. See the example in\ntests/test_generator.py.\n\nGreenlets are provided as a C extension module for the regular unmodified\ninterpreter.\n\nGreenlets are lightweight coroutines for in-process concurrent programming.\n",
  "dev_url": "https://github.com/python-greenlet/greenlet",
  "doc_url": "https://greenlet.readthedocs.io",
  "env_vars": {
    "CIO_TEST": "<not set>"
  },
  "extra": {
    "copy_test_source_files": true,
    "final": true,
    "recipe-maintainers": [
      "curtisalexander"
    ]
  },
  "home": "https://github.com/python-greenlet/greenlet",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
    "asn1crypto 0.24.0 py37_0",
    "beautifulsoup4 4.6.3 py37_0",
    "ca-certificates 2018.03.07 0",
    "certifi 2018.8.24 py37_1",
    "cffi 1.11.5 py37h6174b99_1",
    "chardet 3.0.4 py37_1",
    "conda 4.5.11 py37_0",
    "conda-build 3.14.4 py37_0",
    "conda-env 2.6.0 1",
    "cryptography 2.3.1 py37hdbc3d79_0",
    "filelock 3.0.6 py37_0",
    "glob2 0.6 py37_0",
    "idna 2.7 py37_0",
    "jinja2 2.10 py37_0",
    "libcxx 4.0.1 h579ed51_0",
    "libcxxabi 4.0.1 hebd6815_0",
    "libedit 3.1.20170329 hb402a30_2",
    "libffi 3.2.1 h475c297_4",
    "markupsafe 1.0 py37h1de35cc_1",
    "ncurses 6.1 h0a44026_0",
    "openssl 1.0.2p h1de35cc_0",
    "pip 10.0.1 py37_0",
    "pkginfo 1.4.2 py37_1",
    "psutil 5.4.7 py37h1de35cc_0",
    "pycosat 0.6.3 py37h1de35cc_0",
    "pycparser 2.18 py37_1",
    "pyopenssl 18.0.0 py37_0",
    "pysocks 1.6.8 py37_0",
    "python 3.7.0 hc167b69_0",
    "python.app 2 py37_8",
    "pytz 2018.5 py37_0",
    "pyyaml 3.13 py37h1de35cc_0",
    "readline 7.0 h1de35cc_5",
    "requests 2.19.1 py37_0",
    "ruamel_yaml 0.15.46 py37h1de35cc_0",
    "setuptools 40.2.0 py37_0",
    "six 1.11.0 py37_1",
    "sqlite 3.24.0 ha441bb4_0",
    "tk 8.6.8 ha441bb4_0",
    "tqdm 4.25.0 py37h28b3542_0",
    "urllib3 1.23 py37_0",
    "wheel 0.31.1 py37_0",
    "xz 5.2.4 h1de35cc_4",
    "yaml 0.1.7 hc338f04_2",
    "zlib 1.2.11 hf3cbc9b_2"
  ],
  "summary": "Lightweight in-process concurrent programming",
  "tags": []
}